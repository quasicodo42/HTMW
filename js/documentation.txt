================
data-data-source *required
================
=DEFAULT
data-data-source is a required attribute of the element .clone
    the value of data-data-source is the endpoint used to request data per clone HTML object, 1 clone = 1 endpoint
        the endpoint can be local /backend/products.json or external https://api.com/products
    each .clone within the parent .pocket will be automatically filled with the request data
    *the value of data-data-source is used as the name of the strg object and available through strg.get(name)
=OPTIONAL
data-data-source-name can be used to overwrite the default name for the data object
    *the value of data-data-source-name is then used as the name of the strg object and available through strg.get(name)
data-postflight is used for passing the response data through a data normalizing function creating data that can be used by pckt, i.e., {response:[{...}]}
    a corresponding pckt function must be available, i.e., using data-postflight="product_cleanup" would call the custom function pckt.product_cleanup(name,obj) prior to cloning
data-preflight is used for running a function before the call where global settings can be set or prelogic can run
=EXAMPLE 1
<items>
    <item id="endpoint-display">
        <!-- This item will be added to the pocket and filled with data from the dataSource -->
        <div class="clone" data-data-source="/Collections/dataPull?name=zzzap.io&key=formatting">
        {{rec:name}} {{rec:nameLast}}
        </div>
    </item>
    <item id="product-display">
        <!-- This item will be added to the pocket and filled with data from the dataSource, using the {{rec:}} method -->
        <div class="clone" data-data-source="https://api.com/products" data-data-source-name="products" data-postflight="product_cleanup">
            <div class="card">
                {{rec:id}} {{rec:name}}
                <hr>
                {{rec:desc}}
            </div>
        </div>
    </item>
    <item id="user">
        <!-- This item will be added to the pocket and filled with data from the dataSource (using the <span> method) -->
        <div class="clone" data-data-source="https://api.com/users" data-data-source-name="users" data-preflight="api_cleanup" data-postflight="api_cleanup">
            <div class="card">
                <span data-member="id" data-in="true"></span>
                <!-- the data attribute data-in is optional when "true" -->
                <span data-member="name"></span>
                <hr>
                <span data-member="desc" data-in="true" data-up="true" data-on="true"></span>
            </div>
        </div>
    </item>
</items>


=OVERRIDE (data)
data-data-source can also be placed in .pocket and overrides the .clone data-data-source, this allows for reuse of the HTML object with different data sources (1 clone = many endpoints)
=EXAMPLE
<!-- Item will be placed inside and filled with data from this dataSource -->
<div class="pocket" data-data-source="/Collections/dataPull?name=zzzap.io&key=formatting"></div>

=OVERRIDE (html)
data-override-{name} can be used in .pocket and will override the default endpoint behavior when requesting HTML
=EXAMPLE
<!-- HTML will be placed inside using the override endpoint -->
<div class="pocket" data-items="demo" data-override-demo="/html/demo.html"></div>

==========
data-items *required
==========
data-items is used with .pocket and is a comma delimited list of names that refer to an <item id="name">
all the items will be brought into the pocket
if the item is not available in the <html> syntax an attempt will be made to get it from the backend by sending the reference to pckt.getHtml(name)
An override can be made by using data-override-{name} <div class="pocket" data-items="sample" data-override-sample="/Forms/login"></div>
=EXAMPLE
<div class="pocket" name="someName" data-items="sample"></div>

<items>
    <item id="sample">Some text<item>
</items>

========
callback
========
an item can have a callback and is triggered by the data request or the HTML request
the data callback will run when the item is called and filled from the request
the data callback is passed the name (request URL) of the value of the id attribute
the HTML callback will run after the html is requested and placed in the pocket
the HTML callback is passed the id attribute of the item, no object will be passed
the callback is the name of the function to be called
=EXAMPLE
<items>
    <item id="sample" data-callback="cleanup">Some text<item>
</items>

also, a callback named pckt.callback (user defined) will run after each item has been returned at the end of the process.
the arguments are 'name' (this is the path of the request) and 'object' (the object used to fill the item)
=EXAMPLE
pckt.callback = function(name,obj){
    //do stuff
    console.log({name,obj});
}

===
dev
===
CORS Help
https://stackoverflow.com/questions/10752055/cross-origin-requests-are-only-supported-for-http-error-when-loading-a-local
https://stackoverflow.com/questions/18586921/how-to-launch-html-using-chrome-at-allow-file-access-from-files-mode