<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Hello, world!</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="description" content="" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link rel="icon" href="favicon.png">
    <style>
        .clone, items {
            display: none;
        }
    </style>
</head>
<body>

<script src="https://code.jquery.com/jquery-3.7.0.min.js" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>

<!-- main body -->
<div class="container mb-3">

    <!--pocket sample 1-->
    <h1 class="pocket" data-items="demo"></h1>
    <!--pocket sample 2-->
    <div class="pocket" data-items="frontend-html"></div>
    <!--pocket sample 3-->
    <!-- Item will be placed inside the tag and then filled with data from the dataSource -->
    <h2>Data Inject (sample)</h2>
    <div class="pocket" data-items="live-endpoint"></div>

</div>

<div class="container mb-3 w-50">

    <h2>HTML Form (sample)</h2>
    <!--pocket sample 4-->
    <!-- External item of HTML will be placed inside the tag -->
    <div class="pocket" data-items="main" data-override-main="https://zzzap.io/Forms/login"></div>

</div>

<footer class="footer mt-auto py-3 bg-light pocket" data-items="footer,footertoo"></footer>

<!-- END main body -->

<!-- pocket items -->
<!-- this is an HTML library of snippets -->
<!-- used to create the dynamic layout as needed -->
<items data-soft-cache-items="main">
    <item id="default">Hello, World!</item>
    <item id="demo">Good-bye Mars!</item>
    <item id="frontend-html">
        <p>Welcome to your first HTMW project! HTMW allows you to pull in dynamic data, read ANYTHING, into your project.</p>
        <p>If you can write simple HTML and have a basic knowledge of no-code JSON endpoints, you can create a fully functioning site.</p>
        <p>This page uses dynamic data from the following live endpoint: <a href="https://zzzap.io/Collections/dataPull?name=htmw&group=demo" target="_blank">https://zzzap.io/Collections/dataPull?name=htmw&group=demo</a></p>
        <p>*No-code endpoints allow you to read/write/delete data, login, pull products, read books, show movie times, etc., etc., etc.</p>
        <p><strong>TODO:</strong> Save this file to your computer. Open it in your browser. Watch it grab data from the internet. Then, use your skills to customize it!</p>
    </item>
    <!--notice below how you refer to the json object properties by name: {{rec:desc}}-->
    <!--use the attribute 'data-data-source' to automatically retrieve the endpoint-->
    <!--use aug for augmenting the data with built-in functionality (show the index)-->
    <item id="live-endpoint">
        <hr>
        <div class="row clone" data-data-source="https://zzzap.io/Collections/dataPull?name=htmw&group=demo">
            <div class="col-12"><!--{{aug:index}}: -->{{rec:name}}</div>
        </div>
        <hr>
    </item>
    <item id="footer">
        <div class="container">
            <span class="text-muted">
                Check <a href="http://htmw.in">https://htmw.in</a> for more information!
            </span>
        </div>
    </item>
    <item id="footertoo">
        <div class="container">
            <span class="text-muted">
                *Remember to use <strong>show source</strong> and <strong>inspect element</strong> to see what is happening.
            </span>
        </div>
    </item>
</items>
<!-- END pocket items -->

<!-- Core Javascript -->
<script src="https://cdn.jsdelivr.net/gh/quasicodo42/HTMW@latest/js/htmw.in.js"></script>

<!-- Custom Javascript -->
<script>
    //this function (pckt.callback) is called by default, if available, when all pockets are filled (or the process is complete)
    // pckt.callback = function(name,obj){
    //     //writing the endpoint data to the console for demo purposes
    //     console.log(name,strg.del(name));
    //     //deleting the data object as the demo will not need it again
    //     strg.del(name);
    // }
    //uncomment the function above to show console items
</script>

</body>
</html>